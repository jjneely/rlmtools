Road Map
============

Client:

    * test and fix up "ncsurename"
    * Deal with checksum errors in messages -- especially 
      da39a3ee5e6b4b0d3255bfef95601890afd80709 which is the zero length SHA512
    * Make sure dept changes propagate correctly
    * sysinfo -- see Bug # 440

Server:

Working toward 3.0.x

    * Solve the bazillian MySQL connections problem
        * Solved by moving to Flask/nginx
        * Solved by porting away from Bcfg2
        -- done or in progress
    * Instructions and setup for nginx/uWGSI or apache/mod_wsgi
    * Celery real time and scheduled tasks?
        http://www.celeryproject.org/

    * Implement the RL "modules" 
        * pre install setup from web 
        * cloud setup/support via web-ks tokens
    * puppet should update lastheard
    * bugzilla bugs

    * deleteClient() needs to trigger a revocation/delete of the
      puppet certificate, and RHN profile probably.

Future:

    * Refactor Data layer code into modules rather than classes
    * REST/API access to puppet metadata
    * Convert ezpycrypto 512bit RSA keys to x509 certs from Puppet
    * Refactor web pages to have cleaner URLs

    * Make the Puppet reports/inventory prettier

 Missing UI bits from 2011 re-work:

    * Setting AFS permisssions (Puppet/WKS)
       -- commented out from web UI


Original 2011 plan:

    * Re-work the UI so that all Admin Panels become "Manage Attributes"
      or similar.  Be able to drill down to all dept and client status
      pages from the Front Page.  -- done
    * Each status page should clearly link to the Manage Attributes
      page for that dept/client  -- done
    * MA pages should not be under the Administration tab -- done
    * Access Permissions tab shows overview of Realm Linux access perms
      -- done
    * Access Permissions tabs allow you to link together, create, delete, alter
      Realm Linux access permissions

        * Web-Kickstart
        * PTS Groups
        * RHN
        * Red Hat KB accounts
        * Departments
        * Puppet Repos

    * Create a plugin style system for managing access permissions
        - No.  There is a lot of variability.  Let's get working
          cron jobs and web pages first.
    * Create -inators for cron jobs to process queue of actions to
      alter or create PTS groups, depts, web-kickstart dirs, etc.

Client:


