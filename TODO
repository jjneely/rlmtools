Road Map
============

Client:

    * test and fix up "ncsurename"

Server:

Working toward 3.0.x

    * Solve the bazillian MySQL connections problem
        * Solved by moving to Flask/nginx
        * Solved by porting away from Bcfg2
        -- done or in progress
    * Port away from mod_python (unmaintained)
        nginx ??
        uWSGI ??
        apache + mod_wsgi ??
    * Celery real time and scheduled tasks?
        http://www.celeryproject.org/

    * Puppet updates for the status reports
        * link in inventory data, run reports, metadata
    * Implement the RL "modules" 
        * pre install setup from web 
        * cloud setup/support via web-ks tokens
    * Implement a way to change/assign dept
    * Implement department deletes
    * puppet should update lastheard
    * bugzilla bugs
    * manual delete system profile

Future:

    * Refactor Data layer code into modules rather than classes
    * REST/API access to puppet metadata
    * Convert ezpycrypto 512bit RSA keys to x509 certs from Puppet
    * Refactor web pages to have cleaner URLs

 Missing UI bits from 2011 re-work:

    * Setting AFS permisssions (Puppet/WKS)
    

Original 2011 plan:

    * Re-work the UI so that all Admin Panels become "Manage Attributes"
      or similar.  Be able to drill down to all dept and client status
      pages from the Front Page.  -- done
    * Each status page should clearly link to the Manage Attributes
      page for that dept/client  -- done
    * MA pages should not be under the Administration tab -- done
    * Access Permissions tab shows overview of Realm Linux access perms
      -- done
    * Access Permissions tabs allow you to link together, create, delete, alter
      Realm Linux access permissions

        * Web-Kickstart
        * PTS Groups
        * RHN
        * Red Hat KB accounts
        * Departments
        * Puppet Repos

    * Create a plugin style system for managing access permissions
        - No.  There is a lot of variability.  Let's get working
          cron jobs and web pages first.
    * Create -inators for cron jobs to process queue of actions to
      alter or create PTS groups, depts, web-kickstart dirs, etc.

Client:


